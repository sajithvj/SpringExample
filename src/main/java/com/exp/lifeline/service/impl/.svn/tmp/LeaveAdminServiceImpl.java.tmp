package com.experion.lts.service.impl;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.context.MessageSource;

import com.experion.lts.dao.LeaveAdminDAO;
import com.experion.lts.entity.Employee;
import com.experion.lts.entity.LeaveAvailability;
import com.experion.lts.service.LeaveAdminService;
import com.experion.lts.util.LTSUtil;

public class LeaveAdminServiceImpl implements LeaveAdminService
{
	private LeaveAdminDAO leaveAdminDAO;
	private MessageSource messageSource;

	public MessageSource getMessageSource() {
		return messageSource;
	}

	public void setMessageSource(MessageSource messageSource) {
		this.messageSource = messageSource;
	}

	public LeaveAdminDAO getLeaveAdminDAO() {
		return leaveAdminDAO;
	}

	public void setLeaveAdminDAO(LeaveAdminDAO leaveAdminDAO) {
		this.leaveAdminDAO = leaveAdminDAO;
	}

	public List<Employee> getAllEmpDetails()
	{
		return leaveAdminDAO.getAllEmpDetails();
	}
	public String getSelectedEmpName(int empCode)
	{
		return leaveAdminDAO.getSelectedEmpName(empCode);
	}

	public void resetLeaves(int empCode, int[] leaveTypes, float[] leaveCounts, String[] leaveDuration) 
	{
		leaveAdminDAO.resetLeaves(empCode, leaveTypes, leaveCounts, leaveDuration);	
	}
	
	public List<Employee> searchEmployee(String empName)
	{
		return leaveAdminDAO.searchEmployee(empName);
	}
	
	public List<Employee> showEmployeeDetails() {
		List<Employee> employeeDetails = leaveAdminDAO.showEmployeeDetails();
		return employeeDetails;
	}

	public List<Employee> searchEmployeeByCode(int empCode) {
		List<Employee> empDetails = leaveAdminDAO.searchEmployeeByCode(empCode);
 		return empDetails;
	}

	public String getResponseString(int empCode) throws ParseException 
	{
		SimpleDateFormat sf = new SimpleDateFormat("MM/dd/yyyy");
		SimpleDateFormat sf1 = new SimpleDateFormat("dd-MMM-yyyy");
		Date joiningDate = sf.parse(sf.format(leaveAdminDAO.getJoiningDate(empCode)));
		Date[] currentLeaveYear = LTSUtil.getCurrentLeaveYear(joiningDate);
		String leaveYearFrom = sf1.format(currentLeaveYear[0]);
		String leaveYearTo = sf1.format(currentLeaveYear[1]);
		return leaveYearFrom+"---"+leaveYearTo;
		/*Calendar dateNow = Calendar.getInstance();
		Date currentDate = sf.parse(sf.format(dateNow.getTime()));
		int yearDifference = LTSUtil.getDaysBetweenDates(joiningDate, currentDate)/365;
		yearDifference = yearDifference+1;
		String[] yearArray= new String[yearDifference];
		Calendar fromDate = Calendar.getInstance();
		fromDate.setTime(joiningDate);
		fromDate.add(Calendar.DATE, -1);
		SimpleDateFormat sf1 = new SimpleDateFormat("dd-MMM-yyyy");
		for(int i=yearDifference-1; i>=0; i--)
		{
			fromDate.add(Calendar.DATE, 1);
			String str = sf1.format(fromDate.getTime());
			fromDate.add(Calendar.YEAR, 1);
			fromDate.add(Calendar.DATE, -1);
			str +="---"+ sf1.format(fromDate.getTime());
			yearArray[i] = str;
		}
		return yearArray;*/
		/*Calendar fromDate = Calendar.getInstance();
		fromDate.setTime(joiningDate);
		fromDate.add(Calendar.YEAR, yearDifference);
		fromDate.add(Calendar.DATE, -1);
		SimpleDateFormat sf = new SimpleDateFormat("MM/dd/yyyy");
		String responseText = "<div class=\"styled-select\" style=\"width:185px;\"><select id=\"leaveYear\" style=\"color:#6E6E6E;font-family:Tahoma;width:205px;font-size:14px;\" class=\"textBox\">";
		for(int i=0; i<5; i++)
		{
			fromDate.add(Calendar.DATE, 1);
			String str = sf.format(fromDate.getTime());
			fromDate.add(Calendar.YEAR, 1);
			fromDate.add(Calendar.DATE, -1);
			str +="---"+ sf.format(fromDate.getTime());
			responseText += "<option value=\""+str+"\">"+str+"</option>";
		}
		return responseText+"</select></div>";*/
	}

	public List<LeaveAvailability> getAllAvailabileLeave(int empCode, String currentYear) throws ParseException
	{
		String[] leaveDuration = currentYear.split("---");
		SimpleDateFormat sf = new SimpleDateFormat("MM/dd/yyyy");
		SimpleDateFormat sf1 = new SimpleDateFormat("dd-MMM-yyyy");
		Date fromDate = sf.parse(sf.format(sf1.parse(leaveDuration[0])));
		Date toDate = sf.parse(sf.format(sf1.parse(leaveDuration[1]))); 
		return leaveAdminDAO.getAllAvailabileLeave(empCode,fromDate, toDate);
	}

	/*public String getAvailabilityByYear(String leaveYear, String currentYear, int selectedEmpCode) throws ParseException 
	{
		String responseText = "";
		String reset = messageSource.getMessage("lts.button.reset", null, Locale.getDefault());
		String[] leaveDuration = leaveYear.split("---");
		SimpleDateFormat sf = new SimpleDateFormat("MM/dd/yyyy");
		SimpleDateFormat sf1 = new SimpleDateFormat("dd-MMM-yyyy");
		Date fromDate = sf.parse(sf.format(sf1.parse(leaveDuration[0])));
		Date toDate = sf.parse(sf.format(sf1.parse(leaveDuration[1]))); 
		List<LeaveAvailability> availableLeaves = leaveAdminDAO.getAllAvailabileLeave(selectedEmpCode,fromDate, toDate);
		if(availableLeaves.isEmpty())
		{
			responseText = "<br/><br/><span style=\"text-align:center;margin-left: 130px;\" class=\"errorMsg\">No records found.</span>";
		}
		else
		{
			responseText = "<br/><table align=\"center\" style=\"font-family: Tahoma;color:#827B60;margin-top: 0px;\">";
			for(int i=0; i<availableLeaves.size(); i++)
			{
				if(leaveYear.equals(currentYear))
				{
					responseText += "<tr><td><input type=\"checkbox\" name=\"leaveTypes\" id=\"leaveTypes\" value=\""+availableLeaves.get(i).getTypeId()+"\" onclick=\"enableTextBox();\"/></td>";
				}
				responseText += "<td width=\"155px;\">"+leaveAdminDAO.getLeaveTypeName(availableLeaves.get(i).getTypeId())+"</td>";
				responseText += "<td width=\"40px;\">:</td><td><input type=\"text\" class=\"textBox\" style=\"width:50px;\" id=\""+availableLeaves.get(i).getTypeId()+"\" value=\""+availableLeaves.get(i).getAvailability()+"\" disabled=\"disabled\"/></td></tr>";
			}
			if(leaveYear.equals(currentYear))
			{
				responseText += "<tr><td colspan=\"3\"><div style=\"float: left;\" id=\"globalMsg\" class=\"errorMsg\"></div></td><td><input style=\"float: right;margin-right: 10px;width:50px;font-size: 12px;margin-top: 10px;\" type=\"button\" value=\""+reset+"\" onclick=\"resetLeave();\"/></td></tr>";
			}
			responseText += "</table>";
		}
		return responseText;
	}*/

	public List<Employee> searchEmployeeDetails(String empName,
			String designation) {
		List<Employee> empDetails = leaveAdminDAO.searchEmployeeDetails(empName,designation);
 		return empDetails;
	}
}
