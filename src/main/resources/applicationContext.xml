<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
 
	<context:component-scan base-package="com.exp.lifeline.rest" />
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property>
		<property name="annotatedClasses">
		    <list>
		    	<value>com.exp.lifeline.entity.Employee</value>
		    </list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- <prop key="hibernate.cglib.use_reflection_optimizer">false</prop> -->
			</props>
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		</bean>
		<bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<!-- Use this JNDI lookup for TOMCAT. -->
		 <property name="jndiName">
			<value>java:comp/env/jdbc/lifelineDB</value>
		</property> 
	</bean>
	
	<bean id="loginDAO" class="com.exp.lifeline.dao.hibernate.LoginHibernateDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="loginService" class="com.exp.lifeline.service.impl.LoginServiceImpl">
		<property name="loginDAO">
			<ref bean="loginDAO" />
		</property>
	</bean>
 
</beans>